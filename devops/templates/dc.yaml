apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.licenseplate }}-{{ .Values.global.environment }}
  name: {{ include "rockychat.fullname" . }}-api
  labels:
    {{- include "rockychat.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rockychat.name" . }}-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rockychat.name" . }}-api
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        {{- $podAnnotations := merge (.Values.podAnnotations | default dict) (.Values.global.vault.podAnnotations | default dict) }}
        {{- with $podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        vault.hashicorp.com/role: "{{ .Values.global.vault.role }}"
        vault.hashicorp.com/agent-inject-secret-rockychat.env: "{{ .Values.global.vault.role }}/{{ .Values.global.vault.subPath }}"
        vault.hashicorp.com/agent-inject-template-rockychat.env: |
          {{`{{- with secret "`}}{{ .Values.global.vault.role }}/{{ .Values.global.vault.subPath }}{{`" -}}
          export ROCKETCHAT_URL='{{ .Data.data.rocketchat_url }}'
          export ROCKETCHAT_USER='{{ .Data.data.rocketchat_user }}'
          export ROCKETCHAT_CHANNEL='{{ .Data.data.rocketchat_channel }}'
          export ROCKETCHAT_PASSWORD='{{ .Data.data.rocketchat_password }}'
          export PROJECT_ID='{{ .Data.data.GCP_PROJECT_ID }}'
          export LOCATION='{{ .Data.data.GCP_LOCATION }}'
          export AGENT_ID='{{ .Data.data.GCP_AGENT_ID }}'
          export GCP_SERVICE_ACCOUNT_EMAIL='{{ .Data.data.GCP_SERVICE_ACCOUNT_EMAIL }}'
          export GCP_SERVICE_ACCOUNT_PRIVATE_KEY='{{ .Data.data.GCP_SERVICE_ACCOUNT_PRIVATE_KEY }}'
          {{- end }}`}}
    spec:
      serviceAccountName: {{ default .Values.global.serviceAccountName .Values.serviceAccountName }}
      containers:
      - name: api
        command: ["/bin/sh", "-c"]
        args: 
          [' . /vault/secrets/rockychat.env && npm run start']
        image: "{{ .Values.apiImage.repository }}:{{ .Values.apiImage.tag }}"
        resources:
          {{- toYaml .Values.resources.api | nindent 12 }}
        env:
        - name: ROCKETCHAT_USE_SSL
          value: "True"
        - name: REDIS_HOST
          value: {{ include "rockychat.fullname" . }}-redis
        - name: REDIS_USERNAME
          value: "default"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rockychat-devops-redis-secret
              key: redis-password
        ports:
        - containerPort: 3000
      imagePullSecrets:
        - name: artifacts-default-qaacfs
